type: object
additionalProperties: false
properties:

  source_id:
    type: integer
    description: Unique source identifier integer in gamma-cat

  reference_id:
    type: string
    description: Dataset reference identifier

  file_id:
    type: integer
    description: Counter for cases where multiple measurements are given in a paper for a given source (e.g. for sub-regions).

  telescope:
    "$ref": "#/definitions/telescope"

  data_entry_status:
    type: string
    description: |
      Status of the data entry, can be one of the following words:
      'missing', 'incomplete', 'complete'

  review_required:
    type: string
    description: |
      'yes' or 'no'

  data:
    type: object
    additionalProperties: false
    properties:
      livetime:
        type: string
        description: |
          Livetime (observation time minus dead)
          String that can be parsed by Astropy Units.

      zenith:
        type: string
        description: |
          Mean zenith angle
          String that can be parsed by Astropy Units.

      offset:
        type: string
        description: |
          Mean offset angle
          String that can be parsed by Astropy Units.

      n_on:
        type: number
        unit: counts
        description: Number of events in the on region

      n_off:
        type: number
        unit: counts
        description: Number of events in the off region

      alpha:
        type: number
        description: On / off exposure ration (used for excess computation)

      excess:
        type: number
        description: Excess (number of photons)

      significance:
        type: number
        description: Significance of the excess (pre-trial)

      significance_post_trial:
        type: number
        description: Significance of the excess (post-trial)

  pos:
    type: object
    additionalProperties: false
    properties:
      ra:
        type: object
        additionalProperties: false
        description: |
          Right Ascension (ICRC or FK5 J2000, it's almost the same)
          Properties are strings that can be parsed by Astropy Angle.
        properties:
          val: {type: string, description: Measured value}
          err: {type: string, description: Statistical error}
          err_sys: {type: string, description: Systematic error}

      dec:
        type: object
        additionalProperties: false
        description: |
          Declination (ICRC or FK5 J2000, it's almost the same)
          Properties are strings that can be parsed by Astropy Angle.
        properties:
          val: {type: string, description: Measured value}
          err: {type: string, description: Statistical error}
          err_sys: {type: string, description: Systematic error}

      glon:
        type: object
        additionalProperties: false
        description: |
          Galactic longitude
          Properties are strings that can be parsed by Astropy Angle.
        properties:
          val: {type: string, description: Measured value}
          err: {type: string, description: Statistical error}
          err_sys: {type: string, description: Systematic error}

      glat:
        type: object
        additionalProperties: false
        description: |
          Galactic latitude
          Properties are strings that can be parsed by Astropy Angle.
        properties:
          val: {type: string, description: Measured value}
          err: {type: string, description: Statistical error}
          err_sys: {type: string, description: Systematic error}

  morph:
    type: object
    additionalProperties: false
    properties:
      type:
        "$ref": "#/definitions/morph_type"

      sigma:
        type: object
        additionalProperties: false
        description: |
          Width parameter (semantics type-dependent)
          Properties are strings that can be parsed by Astropy Angle.
        properties:
          val: {type: string, description: Measured value}
          err: {type: string, description: Statistical error}
          err_sys: {type: string, description: Systematic error}

      sigma2:
        type: object
        additionalProperties: false
        description: |
          Width parameter (semantics type-dependent)
          Properties are strings that can be parsed by Astropy Angle.
        properties:
          val: {type: string, description: Measured value}
          err: {type: string, description: Statistical error}
          err_sys: {type: string, description: Systematic error}

      pa:
        type: object
        additionalProperties: false
        description: |
          Position angle
          Properties are strings that can be parsed by Astropy Angle.
        properties:
          frame: {enum: [radec, galactic]}
          val: {type: string, description: Measured value}
          err: {type: string, description: Statistical error}
          err_sys: {type: string, description: Systematic error}

  orbit:
    type: object
    additionalProperties: false
    properties:
      mjd0:
        type: string
        description: |
          Zero phase for orbital period in MJD
          String that can be parsed by Astropy Units.

      period:
        type: object
        additionalProperties: false
        description: |
          Orbital period
        properties:
          val: {type: number, description: Measured value}
          err: {type: number, description: Statistical error}
          errn: {type: number, description: Lower statistical error}
          errp: {type: number, description: Upper statistical error}
          err_sys: {type: number, description: Systematic error}
          unit: {type: string, description: Astropy Unit equivalent with "day".}

  spec:
    type: object
    additionalProperties: false
    properties:

      model:
        type: object
        additionalProperties: true

        # TODO: bring back spectral model validation at some point (possibly in Gammapy)
#        properties:
#
#        type:
#          "$ref": "#/definitions/spec_type"
#
#        norm:
#          type: object
#          additionalProperties: false
#          unit: 1e-12 cm-2 s-1 TeV-1
#          description: Flux norm parameter
#          properties:
#            val: {type: number, description: Measured value}
#            err: {type: number, description: Statistical error}
#            err_sys: {type: number, description: Systematic error}
#
#        e_ref: {type: number, unit: TeV, description: Reference energy for norm}
#
#        index:
#          type: object
#          additionalProperties: false
#          unit: dimensionless
#          description: Spectral index parameter
#          properties:
#            val: {type: number, description: Measured value}
#            err: {type: number, description: Statistical error}
#            err_sys: {type: number, description: Systematic error}
#
#        e_cut:
#          type: object
#          additionalProperties: false
#          unit: TeV
#          description: Cutoff energy parameter
#          properties:
#            val: {type: number}
#            err: {type: number, description: Statistical error}
#            err_sys: {type: number, description: Systematic error}
#
#        covar:
#          type: array
#          description: |
#            Covariance matrix
#            TODO: decide on format.
#            An example of a published covariance matrix is here: 2016arXiv161101863H

      erange:
        type: object
        additionalProperties: false
        description: |
          Energy range of the measurement.
          Note that this is usually different from the energy range of integral fluxes quoted.
        properties:
          min: {type: number}
          max: {type: number}
          unit: {type: string}

      theta:
        type: string
        description: |
          Circular aperture photometry radius
          String that can be parsed by Astropy Units.

      mjd:
        type: object
        additionalProperties: false
        description: |
          TODO
          Properties are strings that can be parsed by Astropy Units.
        properties:
          min: {type: number, unit: day}
          max: {type: number, unit: day}

      phase:
        type: object
        additionalProperties: false
        description: TODO
        properties:
          min: {type: number}
          max: {type: number}

  notes:
    type: string
    description: Hand-written, free-format notes

required:
  - source_id
  - reference_id
  - telescope
  - data_entry_status
#  - morphology
#  - spectrum

definitions:

  telescope:
    enum:
      - hess
      - veritas
      - magic
      - whipple
      - hegra
      - cangaroo
      - hawc
      - milagro
      - crimea
      - argo
      - cat
      - durham
    description: Telescope or instrument or observatory

  morph_type:
    enum:
      - point
      - gauss
      - shell
    description: Morphology type
    # The following description is just descriptive, not used in schema validation
    enum_values:
      - name: point
        description: See Delta2D in Gammapy
      - name: gauss
        description: See Gaussian2D in Gammapy
      - name: shell
        description: See Shell2D in Gammapy

  spec_type:
    enum:
      - pl
      - pl2
      - ecpl
    description: Spectrum type
    # The following description is just descriptive, not used in schema validation
    enum_values:
      - name: pl
        description: See PowerLaw in Gammapy
      - name: pl2
        description: See PowerLaw2 in Gammapy
      - name: ecpl
        description: See ExponentialCutoffPowerLaw in Gammapy

